; The final, generated and tied-together FFI module.
(library
 (name Luv_FFI)
 (public_name luv.ffi)
 (modules Luv_FFI FFI_generated_functions)
 (c_names ffi_generated_functions trampolines)
 (libraries ctypes.stubs libuv_functions)
 (c_flags (:standard "-I ../vendor"))
 (c_library_flags (:standard -Lsrc/vendor -Lluv/src/vendor -luv -lpthread)))
; TODO Check linking against the final library in a final revdep test.



; Everything below is the bindings generator process using ctypes. It produces
; two OCaml modules, FFI_generated_functions and FFI_generated_types.

; Type bindings (FFI_generated_types).
(library
 (name libuv_types)
 (public_name luv.types)
 (modules Libuv_types)
 (libraries ctypes))

(executable
 (name generate_types_start)
 (modules Generate_types_start)
 (libraries ctypes.stubs libuv_types))

(rule
 (targets generate_types_step_2.c)
 (deps generate_types_start.exe)
 (action (with-stdout-to %{targets} (run %{deps}))))

; Based partially on
;   https://github.com/avsm/ocaml-yaml/blob/master/types/stubgen/jbuild#L20
(rule
 (targets generate_types_step_2.exe)
 (deps (:c generate_types_step_2.c) ../vendor/libuv_files)
 (action (bash "\
  %{cc} %{c} \
  -I `dirname %{lib:ctypes:ctypes_cstubs_internals.h}` \
  -I %{ocaml_where} \
  -I ../vendor -o %{targets}")))
; TODO Is this portable??

(rule
 (targets FFI_generated_types.ml)
 (deps generate_types_step_2.exe)
 (action (with-stdout-to %{targets} (run %{deps}))))



; Function bindings.
(library
 (name libuv_functions)
 (public_name luv.functions)
 (flags (:standard -w -9-16-27))
 (wrapped false)
 (modules FFI_generated_types Libuv_functions Types)
 (libraries ctypes libuv_types))

(executable
 (name generate_c_functions)
 (modules Generate_c_functions)
 (libraries ctypes.stubs libuv_functions))

(executable
 (name generate_ml_functions)
 (modules Generate_ml_functions)
 (libraries ctypes.stubs libuv_functions))

(rule
 (targets ffi_generated_functions.c)
 (deps generate_c_functions.exe)
 (action (with-stdout-to %{targets} (run %{deps} luv_stub))))

(rule
 (targets FFI_generated_functions.ml)
 (deps generate_ml_functions.exe)
 (action (with-stdout-to %{targets} (run %{deps} luv_stub))))
